# -*- mode: python -*-
# Enemy Territory build script
# TTimo <ttimo@idsoftware.com>
# http://scons.sourceforge.net

import sys, os
import scons_utils

Import( 'GLOBALS' )
Import( GLOBALS )

qagame_string = """
bg_animation.c
bg_animgroup.c
bg_campaign.c
bg_character.c
bg_classes.c
bg_misc.c
bg_pmove.c
bg_slidemove.c
bg_sscript.c
bg_stats.c
bg_tracemap.c
bg_weapons.c
bg_profiler_hook.c
etpro_mdx.c
et-antiwarp.c 
g_active.c
g_alarm.c
g_antilag.c
g_buddy_list.c
g_character.c
g_client.c
g_cmds.c
g_cmds_ext.c
g_combat.c
g_config.c
g_fireteams.c
g_items.c
g_main.c
g_match.c
g_match_tokens.c
g_mem.c
g_misc.c
g_missile.c
g_mover.c
g_multiview.c
g_osfile.c
g_props.c
g_referee.c
g_save.c
g_script.c
g_script_actions.c
g_session.c
g_shrubbot.c
g_spawn.c
g_stats.c
g_strparse.c
g_sv_entities.c
g_svcmds.c
g_syscalls.c
g_systemmsg.c
g_target.c
g_team.c
g_teammapdata.c    
g_time.c
g_trigger.c
g_utils.c
g_vote.c
g_weapon.c
q_math.c
q_shared.c
g_xpsave.c
g_crash.c
geoip.c
"""


local_env = g_env.Copy()

local_env.Append( CPPDEFINES = [ 'GAMEDLL' ] )

# redeye - optionally build w/o omnibot support, regardless whether compiling for Linux or Windows
if (WITH_OMNIBOT == '1'):
	local_env.Append( CPPDEFINES = [ 'OMNIBOTS' ] )
	qagame_string += """g_etbot_interface.cpp ../../../../../Omnibot/Common/BotLoadLibrary.cpp"""
	
# Jaybird - these lines are used to statically-link c++'s dependencies
# redeye - but only if we not are using gcc4
if (g_os == 'Linux' and gcc_major_ver != '4'):
	local_env.Append( LINKFLAGS = [ 'misc/libstdc++.a', '-static-libgcc', '-L./misc/' ] )

local_env['LINK'] = local_env['CXX']

qagame_list = scons_utils.BuildList( 'game', qagame_string )
source_list = qagame_list

#ret = local_env.Program( target = 'et', source = source_list )
ret = local_env.SharedLibrary( target = 'qagame', source = source_list )
Return( 'ret' )
